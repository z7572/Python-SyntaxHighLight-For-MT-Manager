{
    // @author: z7572
    // @repo: https://github.com/z7572/Python-SyntaxHighLight-For-MT-Manager
    // highlight in VSCode style
    //
    // 附：
    // 因为不支持start-end中end引用start的捕获组，导致引号不同的字符串要重复4次
    // 另外，因为没有类似于能把匹配结果存为匹配项的功能，导致不支持高亮引用的函数
    //
    name: ["Python", ".py"]
    comment: {startsWith: "#", addToContains: false}
    styles: [ // 注释内为VSCode浅色主题原色
        "default",    #3B3B3B, #CCCCCC
        "b1",         #0431FA, #FFD700 // #0431FA
        "b2",         #2F8D2F, #DA70D6 // #2F8D2F
        "b3",         #7A3714, #179FFF // #7A3714
        "keyword",    #AF00DB, #C586C0
        "keyword2",   #0033B3, #569CD6 // #0000FF
        "type",       #267F99, #4EC9B0
        "function",   #795E26, #DCDCAA // #795E26
        "number",     #1750EB, #B5CEA8 // #098658
        "variable",   #1750EB, #9CDCFE // #001080
        "string",     #A31515, #CE9178 // #A31515
        "r-string",   #811F3F, #D16969 // #811F3F
        "rawEscape",  #EE0000, #569CD6 // #EE0000
        "strEscape",  #0037A6, #D7BA7D // #EE0000
        // "comment", #008000, #6A9955
        "error",      #FF4141, #D21414
        "underline", #NULL, #NULL, @U
        
    ]
    defines: [
        // 高亮括号
        "bracketHighlight": [
            {include: "S1"}
            {include: "M1"}
            {include: "L1"}
        ]
        "S1": {
            start: {match: /\(/, 0: "b1"}
            end: {match: /\)/, 0: "b1"}
            contains: [
                {include: "S2"}
                {include: "M2"}
                {include: "L2"}
                {include: "main"}
                {include: "global"}
            ]
        }
        "S2": {
            start: {match: /\(/, 0: "b2"}
            end: {match: /\)/, 0: "b2"}
            contains: [
                {include: "S3"}
                {include: "M3"}
                {include: "L3"}
                {include: "main"}
                {include: "global"}
            ]
        }
        "S3": {
            start: {match: /\(/, 0: "b3"}
            end: {match: /\)/, 0: "b3"}
            contains: [
                {include: "S1"}
                {include: "M1"}
                {include: "L1"}
                {include: "main"}
                {include: "global"}
            ]
        }
        "M1": {
            start: {match: /\[/, 0: "b1"}
            end: {match: /\]/, 0: "b1"}
            contains: [
                {include: "S2"}
                {include: "M2"}
                {include: "L2"}
                {include: "main"}
                {include: "global"}
            ]
        }
        "M2": {
            start: {match: /\[/, 0: "b2"}
            end: {match: /\]/, 0: "b2"}
            contains: [
                {include: "S3"}
                {include: "M3"}
                {include: "L3"}
                {include: "main"}
                {include: "global"}
            ]
        }
        "M3": {
            start: {match: /\[/, 0: "b3"}
            end: {match: /\]/, 0: "b3"}
            contains: [
                {include: "S1"}
                {include: "M1"}
                {include: "L1"}
                {include: "main"}
                {include: "global"}
            ]
        }
        "L1": {
            start: {match: /\{/, 0: "b1"}
            end: {match: /\}/, 0: "b1"}
            contains: [
                {include: "S2"}
                {include: "M2"}
                {include: "L2"}
                {include: "main"}
                {include: "global"}
            ]
        }
        "L2": {
            start: {match: /\{/, 0: "b2"}
            end: {match: /\}/, 0: "b2"}
            contains: [
                {include: "S3"}
                {include: "M3"}
                {include: "L3"}
                {include: "main"}
                {include: "global"}
            ]
        }
        "L3": {
            start: {match: /\{/, 0: "b3"}
            end: {match: /\}/, 0: "b3"}
            contains: [
                {include: "S1"}
                {include: "M1"}
                {include: "L1"}
                {include: "main"}
                {include: "global"}
            ]
        }
        
        "escape": {match: /\\([\\"'abfnrtv]|[0-7]{1,3}|u[0-9a-fA-F]{4})/, 0: "strEscape"}
        "b-escape": {match: /\\([\\"'abfnrtv]|[0-7]{1,3})/, 0: "strEscape"}
        "r-escape": [
            {match: /\\[bdswABDSWZ]/, 0: "r-string"} // 按照VSCode原格式
            {match: /\\([0-7]{3}|0(?![0-9]))|\*/, 0: "strEscape"} // 0和3位八进制数
            {match: /\\([0-9]{1,2}|u[0-9a-fA-F]{4})/, 0: "rawEscape"} // 1-2位十进制数
            {match: /(?s)\\./, 0: "strEscape"}
            ]
        "f-string":{
            style: "variable"
            start: {match: /\{/, 0: "keyword"}
            end: {match: /(?m)\}|$/, 0:"keyword"}
        }
        
        // 全局变量
        "global":[
        {include: "url"}
        ]
        "url": {match: /(?i)\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/,
                0: "underline"
                }
        
        // 主函数
        "main": [
        
        //{match: /#.*/, 0: "comment"}
        {
            style: "comment"
            start:{match: /#/}
            end: {match: /(?m)(?=$)/}
            contains: [
                {include: "global"}
            ]
        }
        {
            style: "comment"
            start: {match: /(?m)^\s*"""/}
            end: {match: /"""|$/}
            contains: [
                {match: /\\./}
                {include: "global"}
            ]
        }
        {
            style: "comment"
            start: {match: /(?m)^\s*'''/}
            end: {match: /'''|$/}
            contains: [
                {match: /\\./}
                {include: "global"}
            ]
        }
        // 定义类函数 (@ def class)
        // 暂不处理 from 和 import，因为它们较易识别
        {
            style: "function"
            start: {match: /(?m)(^|\s+)@/} // 行首匹配
            end: {match: /(?m)(?=(\(|#|$))/} // 行尾匹配
            mustMatchEnd: true
        }
        {
            style: "function"
            start: {match: /(?<=def )/}
            end: {match: /(?m)(?=\()/} // 无括号不高亮
            mustMatchEnd: true
            contains:[
                {match:/[#.*|\n]/} => FAIL
            ]
        }
        {
            style: "type"
            start: {match: /(?<=class )/}
            end: {match: /(?m)(?=[\(:])/}
            mustMatchEnd: true
            contains:[
                {match:/[#.*|\n]/} => FAIL
            ]
        }
        // 字符串（包括前缀b f r fr u）
        
        // f-string
        {
            style: "string"
            start: {match: /(f|F)"/, 1: "keyword2"}
            end: {match: /(?m)"|$/}
            contains: [
                {include: "f-string"}
                {include: "escape"}
                {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(f|F)'/, 1: "keyword2"}
            end: {match: /(?m)'|$/}
            contains: [
                {include: "f-string"}
                {include: "escape"}
                {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(f|F)"""/, 1: "keyword2"}
            end: {match: /(?m)"""|$/}
            contains: [
                {include: "f-string"}
                {include: "escape"}
                {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(f|F)'''/, 1: "keyword2"}
            end: {match: /(?m)'''|$/}
            contains: [
                {include: "f-string"}
                {include: "escape"}
                {include: "global"}
            ]
        }
        // raw string
        {
            style: "r-string"
            start: {match: /(r|R)"/, 1: "keyword2"}
            end: {match: /(?m)"|$/}
            contains: [
                {include: "r-escape"}
                {include: "global"}
            ]
        }
        {
            style: "r-string"
            start: {match: /(r|R)'/, 1: "keyword2"}
            end: {match: /(?m)'|$/}
            contains: [
                {include: "r-escape"}
                {include: "global"}
            ]
        }
        {
            style: "r-string"
            start: {match: /(r|R)"""/, 1: "keyword2"}
            end: {match: /"""|$/}
            contains: [
                {include: "r-escape"}
                {include: "global"}
            ]
        }
        {
            style: "r-string"
            start: {match: /(r|R)'''/, 1: "keyword2"}
            end: {match: /'''|$/}
            contains: [
                {include: "r-escape"}
                {include: "global"}
            ]
        }
        // raw f-string
        {
            style: "string"
            start: {match: /(?i)(fr|rf)"/, 1: "keyword2"}
            end: {match: /(?m)"|$/}
            contains: [
            {include: "f-string"}
            {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(?i)(fr|rf)'/, 1: "keyword2"}
            end: {match: /(?m)"|$/}
            contains: [
            {include: "f-string"}
            {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(?i)(fr|rf)"""/, 1: "keyword2"}
            end: {match: /(?m)"|$/}
            contains: [
            {include: "f-string"}
            {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(?i)(fr|rf)'''/, 1: "keyword2"}
            end: {match: /(?m)"|$/}
            contains: [
            {include: "f-string"}
            {include: "global"}
            ]
        }
        // 普通字符串
        {
            style: "string"
            start: {match: /(u|U?)"""/, 1: "keyword2"}
            end: {match: /"""|$/}
            contains: [
                {include: "escape"}
                {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(u|U?)'''/, 1: "keyword2"}
            end: {match: /'''|$/}
            contains: [
                {include: "escape"}
                {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(u|U?)"/, 1: "keyword2"}
            end: {match: /(?m)"|$/}
            contains: [
                {include: "escape"}
                {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(u|U?)'/, 1: "keyword2"}
            end: {match: /(?m)'|$/}
            contains: [
                {include: "escape"}
                {include: "global"}
            ]
        }
        // bytes字符串 无unicode字符转义
        {
            style: "string"
            start: {match: /(b|B)"""/, 1: "keyword2"}
            end: {match: /"""|$/}
            contains: [
                {include: "b-escape"}
                {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(b|B)'''/, 1: "keyword2"}
            end: {match: /'''|$/}
            contains: [
                {include: "b-escape"}
                {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(b|B)"/, 1: "keyword2"}
            end: {match: /(?m)"|$/}
            contains: [
                {include: "b-escape"}
                {include: "global"}
            ]
        }
        {
            style: "string"
            start: {match: /(b|B)'/, 1: "keyword2"}
            end: {match: /(?m)'|$/}
            contains: [
                {include: "b-escape"}
                {include: "global"}
            ]
        }
        
        {number: "2|8|10|16|F|E|_", fSuffixes: "J"}
        {match: keywordsToRegex(
                "bool bytearray bytes classmethod complex dict float frozenset int list object property set"
                "slice staticmethod str tuple type super"
                "enumerate range filter map memoryview reversed zip"
            ), 0: "type"}
        {match: keywordsToRegex(
                "__debug__ True False None self and class def global in is lambda nonlocal not or Ellipsis NotImplemented"
            ), 0: "keyword2"}
        {match: /async def/, 0: "keyword2"}
        {match: keywordsToRegex(
                "as assert async await break continue del elif else except finally for from if import pass"
                "raise return try while with yield"
            ), 0: "keyword"}
        {match:keywordsToRegex(
                "__build_class__ __import__ __init__ abs aiter all any anext ascii bin breakpoint callable"
                "chr compile copyright credits delattr dir divmod eval exec exit format getattr globals"
                "hasattr hash help hex id input isinstance issubclass iter len license locals max min next"
                "oct open ord pow print quit reload repr round setattr sorted sum vars"
            ), 0: "function"}
        {match:keywordsToRegex(
                "__all__ __annotations__ __bases__ __builtins__ __cached__ __class__ __closure__ __code__"
                "__defaults__ __dict__ __doc__ __file__ __func__ __globals__ __kwdefaults__ __loader__"
                "__match_args__ __members__ __metaclass__ __methods__ __module__ __mro__ __mro_entries__"
                "__name__ __qualname__ __post_init__ __self__ __signature__ __slots__ __subclasses__ __version__"
                "__weakref__ __wrapped__ __classcell__ __spec__ __path__ __package__ __future__ __traceback__"
                "*args **kwargs **kw"
            ), 0: "variable"}
        {match: keywordsToRegex(
                "ArithmeticError AssertionError AttributeError BufferError BlockingIOError BrokenPipeError ChildProcessError"
                "ConnectionAbortedError ConnectionRefusedError ConnectionResetError EOFError EnvironmentError FileExistsError"
                "FileNotFoundError FloatingPointError IOError ImportError IndentationError IndexError InterruptedError"
                "IsADirectoryError NotADirectoryError PermissionError ProcessLookupError TimeoutError KeyError LookupError"
                "MemoryError NameError NotImplementedError OSError OverflowError ReferenceError RuntimeError RecursionError"
                "SyntaxError SystemError TabError TypeError UnboundLocalError UnicodeEncodeError UnicodeDecodeError"
                "UnicodeTranslateError ValueError WindowsError ZeroDivisionError ModuleNotFoundError PendingDeprecationWarning"
                "DeprecationWarning RuntimeWarning SyntaxWarning UserWarning FutureWarning ImportWarning UnicodeWarning"
                "BytesWarning ResourceWarning Warning SystemExit StopIteration StopAsyncIteration KeyboardInterrupt"
                "GeneratorExit BaseException Exception"
            ), 0: "type"}
        {include: "bracketHighlight"}
        {match: /[\(\)\[\]\{\}]/, 0: "error"} // 括号错误高亮
        {include: "global"}
        ]
    ]
    contains: {
        {include: "bracketHighlight"}
        {include: "main"}
        {include: "global"}
    }
}
